# Stage 1: Builder
FROM  docker.io/library/eclipse-temurin:21-jdk AS build

USER root

ENV JAVA_OPTS="-Dorg.gradle.daemon=false"

COPY --chown=1000:1000 gradlew /code/gradlew
COPY --chown=1000:1000 gradle /code/gradle
COPY --chown=1000:1000 build.gradle /code/
COPY --chown=1000:1000 settings.gradle /code/
COPY --chown=1000:1000 gradle.properties /code/

USER 1000

WORKDIR /code

RUN ./gradlew wrapper --console=plain --no-watch-fs

RUN ./gradlew dependencies --console=plain --no-watch-fs > /dev/null

COPY src /code/src

ARG QUARKUS_PROFILE

RUN ./gradlew assemble -Dquarkus.profile=${QUARKUS_PROFILE} --console=plain --no-watch-fs

## Stage 2 : create the docker final image
FROM docker.io/library/eclipse-temurin:21.0.4_7-jre

ENV LANGUAGE='en_US:en'

# We make four distinct layers so if there are application changes the library layers can be re-used
COPY --from=build /code/build/quarkus-app/lib/ /deployments/lib/
COPY --from=build /code/build/quarkus-app/*.jar /deployments/
COPY --from=build /code/build/quarkus-app/app/ /deployments/app/
COPY --from=build /code/build/quarkus-app/quarkus/ /deployments/quarkus/

EXPOSE 8080
USER 1001
ENV JAVA_OPTS_APPEND="-Dquarkus.http.host=0.0.0.0 -Djava.util.logging.manager=org.jboss.logmanager.LogManager"
ENV JAVA_APP_JAR="/deployments/app.jar"

ENTRYPOINT [ "java", "-jar", "/deployments/quarkus-run.jar" ]
