# Default values for standard.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: registry.barebone.ldmz/prog/demo/todo-api
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: "feature-cookie-auth"

imagePullSecrets: [ ]
nameOverride: ""
fullnameOverride: ""

env:
  QUARKUS_PROFILE: 'cookie'
  QUARKUS_DATASOURCE_REACTIVE_URL: 'postgresql://todo-api-postgresql:5432/todo-api'
  QUARKUS_DATASOURCE_JDBC_URL: 'jdbc:postgresql://todo-api-postgresql:5432/todo-api'
  QUARKUS_HTTP_CORS_ORIGIN: '*'
  QUARKUS_HTTP_SAME_SITE_COOKIE__QUARKUS_SESSION__VALUE: 'None'

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: { }
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: { }
podLabels: { }

podSecurityContext:
  fsGroup: 2000
  runAsNonRoot: true
  seccompProfile:
    type: RuntimeDefault

securityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop:
      - ALL
  readOnlyRootFilesystem: true
  runAsUser: 65535
  runAsNonRoot: true

service:
  type: ClusterIP
  port: 8080

ingress:
  enabled: true
  className: ""
  annotations:
    cert-manager.io/cluster-issuer: "web-issuer"
    traefik.ingress.kubernetes.io/router.middlewares: "kube-system-redirect-https@kubernetescrd"
  # kubernetes.io/ingress.class: nginx
  # kubernetes.io/tls-acme: "true"
  hosts:
    - host: todo-api.barebone.ldmz
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls:
    - secretName: todo-api-barebone-ldmz
      hosts:
        - todo-api.barebone.ldmz

resources: { }
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
#   memory: 128Mi
# requests:
#   cpu: 100m
#   memory: 128Mi

livenessProbe:
  httpGet:
    path: /q/health/live
    port: http
readinessProbe:
  httpGet:
    path: /q/health/ready
    port: http

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes:
  - name: tmp
    emptyDir: { }
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts:
  - name: tmp
    mountPath: /tmp
    readOnly: false

# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: { }

tolerations: [ ]

affinity: { }

postgresql:
  enabled: true
  auth:
    username: todo-api
    database: todo-api

secret:
  # pwgen 80 1 | kubeseal --raw --name postgres-password --namespace todo-api
  postgresPassword: 'AgAF7+GUWZNREhJZ87fVWEYBiZ/ee14nlAhYsuEgE/dwX02XebTFRRfQmLVQTB3YL0fehs1OgLQ1WPSrz1js8xpq9VKVHaqEJgvfBKzRNd6yO3IkiOU4S9UPiMjV8yhp9zsRz2Gs/W3AMKNtKFwKXSB214PP3xMQGy8/LJbDwYOGtKuTTUMUKS/6TBbVlpMMhGYjAx0out6W6NZdV3M0EQBCOM3Tj3d7dLkIhTvIbuec1Mfb9eYvGgRXFRZHU6JixTOKzLlPGdWwsKldBY1GS2QCYZkSqb+R5mUIJTk72Vq+SommfgTq7nbOC6eDphiy6Jx3zPHkralUVneeikdgXXVKLdVZfAu9kpPbb2IgIhS5gpvQEaLrc6IjdmJKon8nOJZ2UPC6WvvoIVIoYiOUYlOBUPxFqo0ag9eoGFRsAMQoWbTeJaEDryqxhfiWObZlQ0y8J6RGfzK75Cv/AWjPE7zNbVuESBlASyKrrAyffkiBuSDS0/kNFXUCuvbW/EPhelDdKrQODukQoFigVKArUA/8wC6JtAT/eLkb5vcec0RkDpC7AAl6S0GKA6ZgafXo43pPEY068+7prpdlhwgtOsahV0tBzZV1T4pWa7MCLsfY3bRFweEXD7dTMwevC6bDe6SOhzV2ZA361eMc+ZNXWkEMXZs5e7IxkqUXx+xciYyszB1AHz7wN4EUS4JN3O7mc8fSuXF1/v2Vln3Dcma0sR3zS3VqmVWVdUbzSN3SFPu7xGxfbCatkYzObAsQsvZFtdfL2vOUOXBGHRtUK/HMUgFTHGnix7tN3oC0uQ7HEGny8kQ='
  # pwgen 80 1 | kubeseal --raw --name password --namespace todo-api
  dbPassword: 'AgASJgoBbCXTd1OYzPOBV0M2E39Qk1YxSZ/RKsZaSSzUUwPNMU9vklOxjtPfqbU97YNeeqTsARfEjvmdqOxqdsFT/b5Kczmm/bfwQLNLDPF52zt6oDofZNalg6aZ/JCFAu3m9FsImL3Yi5g9mTXtm4NhSeriPVH7UJX/qn0rf4yf8e2yph7UvKj0Ry4K8KjHXlXqQHb799U3Dv3qF12Ffiu5XibAo8EFRP1VqaiUF/qf815clSfMlyhCi8JZYVVsrLmu7aYlunwn1a3kDqi8jXO8NM0IsqNGHVI9u2DjhPK8K0SZrsNhsiLo1xbEomXClxBiyPVyHz6TIk5SuC4MF/T0JboanpySi+FAPaV6VDifqasPxEQ6sSuIC947v+pV0ER4zKXFlmoX+xFoIvRfYAypIi51wskf2Tfq+9tF6rF30utjScRqc6lxVZ62vOCystny44nfRBbvrbyLmDAns9zN3AcDM+JwmLIMzvgDtZrKJW0b1SqrpgKkUtigzxVxCsTHvwhhw3wyOOtLOpeoFGF9KDenUIc0r9LyWf6x7CcBZgbxpat0zXEGe5xEKBkcZ/iU+IZTvyfeI6h4PnWon8xvir6FdJNEwCfvwbXt1tUMeQVG0ZLNIydup24cx/eVqmjGbyczU1RQERfdbSOLfjo/qXHVerXIQbqRCywFz2PAr3ilF6Szogbk2LGXwkF1zLq3kj+GWui0cCgR3+7hdWRwhjo0vbaVchUEmDsSEB9rYAcglrPX5xqOtQiIqbnkWzylc5BQfmrdPOvWA35nSq1jfx9YPUSZ2ntwOH6SL9JkpEM='
