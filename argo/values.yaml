# Default values for standard.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: registry.barebone.ldmz/prog/demo/todo-api
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: "feature-cookie-auth"

imagePullSecrets: [ ]
nameOverride: ""
fullnameOverride: ""

env:
  QUARKUS_PROFILE: 'cookie'
  QUARKUS_DATASOURCE_REACTIVE_URL: 'postgresql://todo-api-postgresql:5432/todo-api'
  QUARKUS_DATASOURCE_JDBC_URL: 'jdbc:postgresql://todo-api-postgresql:5432/todo-api'
  QUARKUS_HTTP_CORS_ORIGIN: '*'
  QUARKUS_HTTP_SAME_SITE_COOKIE__QUARKUS_SESSION__VALUE: 'None'

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: { }
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: { }
podLabels: { }

podSecurityContext:
  fsGroup: 2000
  runAsNonRoot: true
  seccompProfile:
    type: RuntimeDefault

securityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop:
      - ALL
  readOnlyRootFilesystem: true
  runAsUser: 65535
  runAsNonRoot: true

service:
  type: ClusterIP
  port: 8080

ingress:
  enabled: true
  className: ""
  annotations:
    cert-manager.io/cluster-issuer: "web-issuer"
    traefik.ingress.kubernetes.io/router.middlewares: "kube-system-redirect-https@kubernetescrd"
  # kubernetes.io/ingress.class: nginx
  # kubernetes.io/tls-acme: "true"
  hosts:
    - host: todo-api.barebone.ldmz
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls:
    - secretName: todo-api-barebone-ldmz
      hosts:
        - todo-api.barebone.ldmz

resources: { }
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
#   memory: 128Mi
# requests:
#   cpu: 100m
#   memory: 128Mi

livenessProbe:
  httpGet:
    path: /q/health/live
    port: http
readinessProbe:
  httpGet:
    path: /q/health/ready
    port: http

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes:
  - name: tmp
    emptyDir: { }
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts:
  - name: tmp
    mountPath: /tmp
    readOnly: false

# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: { }

tolerations: [ ]

affinity: { }

postgresql:
  enabled: true
  auth:
    username: todo-api
    database: todo-api

secret:
  # pwgen 80 1 | kubeseal --raw --name postgresPassword --namespace todo-api
  postgresPassword: 'AgBg8CRjO+PiOj6xVIhjmfDJawBCIju5i/Yf70RN2uBOf9bxRwKE5/VOoQzlMOd5CRJ5HjeU1MRiniT01DKJWQg1NW7ed9rXbzUo7VWUg71/q0zENkVgRNmL015nMegCgyR2L7dEDKKXEcv2gvRmw/pwXHtAK0DVY9z+o1sV3ZOxfliVwng+lPffkjGWVleE+pfPrmQUhK2VboNEqW7V62/c9XU7EsaPtdjstNsds0eAH9zgR+bscWny2C5Of/ul8w/EoOmsEGIa4pp+fTbX8s8Al3PE1Xtu/Ta6X2Fizg5I/+jCJzbtk0JN28dysSjROmsSAy4vWFhmMsmPv1b/MZrKvyta5cY4yjQ0aXtnvSdgDvWy6lTGqiOTtLjtn0uCRHDJauTe202JR631Pi/20Zvq0bkmSnqu/hDpmfAOd39sQcGV6vBFK4XdpEQcn4afk1dFhvQAR0d7pjwhh/2AF2GaTR77sUvVwznXUugcMdRD/3DKEM+GRml57rI2rko7kTouemg8xNLHqs+r9oETbj+/2K4lwhY2TMF3yeANecVap9Iy0tJXx1Ek28/e1Vod2LVjIlN3DBo5DKysxPEgQ2Qy98qrLn6XJkNXsFCGFC0a7Eng6lCYZ0geqJ6ByO7t3+RSWy5kJ7RpHUJz0miEEtD5zqpyBQ0GecM+v6KXwDUn4aAjEZdOe3Gu6CGJPMNFV40mslbpTxiSRSI6q8aA90QxqvqzLSJulQBu5o0SPE73qdCvZNerNuVKnqwwlmG+PBLTxVGSPfnbLEqeoJSeaB6jj7aU5vU36uEsMKCIA+3XVz8='
  # pwgen 80 1 | kubeseal --raw --name dbPassword --namespace todo-api
  dbPassword: 'AgCOhd2sQSVlQLYpx18JTKDQtYSwzUjqV80Dq9nxJGtHLNs04If/ckUaPyZ8gyPngfzlXyRZkYqsiqu5u5H+z3LKkEHt2jsaa4jKNK01n8Isi5pi8d3q0904hlyCMVi5DfPOUZrxRcEVZ7N4lxT5OBVhL7Disngy8kyIy9a4+DWPQbuzYPCS+Xrf2J5mJgdkGe/R6kESbaes9K2MkV6Wg+4U/L1RImGrzgg3z8aAliN7HALUuWFVgo4nRGXAMKFvpmZHDOM6I4NVrLyyynBCMM0kB8TAEDOdNg5eojS+828hC7BLSoDtc372p/H6YPF7Xli25kmCP8FX4MKeYTJuzSmX9fDEQEo2ZfiLFBnX83TtnvPQaLoX8oLfAbdqU9CAgLrH2RTyCG3sez+VoyNnrZC27MpOR7XAgEi2Y2N2i6YfbO0Divj0nDMKiR2JUO7SdHnZ9T9fGYNTcotqjVbkTCZLNKqn0abRmBjJfToIlX7HUg2OpIZWhUGlXpsRbYoIgYyf24ZsseIIahZqkMuSHt+Ru4ZMSCEoxTyvk5DTIv2GORqoerubgmkVifYmdp6TQ0fxT94Rvm5bE6x6p3V39uBgxoPe/8x/48dLcI1XSLLWtQ13tkkXTHQHcgmylxgMgRUC028vmq3HZhcEX/zEAK8HXERYcKBmYRz7Y+8RKo9BkJ/CUvufTc0jabbSP9AbD1fEBLRhXsbEASPY6EzXtU0hodxBL7oKAbyp5iynie4KyuNcARsksE5/wUIU3f9AMmCqrPe4QopAOwOm4oE9fNZaSTNcShC5VSUlkstc34u8x1I='
